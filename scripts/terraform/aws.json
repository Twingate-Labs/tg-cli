{
  "advanced": "/*==== The VPC ======*/\nresource \"aws_vpc\" \"vpc\" {\n  cidr_block           = \"${var.vpc_cidr}\"\n  enable_dns_hostnames = true\n  enable_dns_support   = true\n  tags = {\n    Name        = \"${var.environment}-vpc\"\n    Environment = \"${var.environment}\"\n  }\n}\n/*==== Subnets ======*/\n/* Internet gateway for the public subnet */\nresource \"aws_internet_gateway\" \"ig\" {\n  vpc_id = \"${aws_vpc.vpc.id}\"\n  tags = {\n    Name        = \"${var.environment}-igw\"\n    Environment = \"${var.environment}\"\n  }\n}\n/* Elastic IP for NAT */\nresource \"aws_eip\" \"nat_eip\" {\n  vpc        = true\n  depends_on = [aws_internet_gateway.ig]\n}\n/* NAT */\nresource \"aws_nat_gateway\" \"nat\" {\n  allocation_id = \"${aws_eip.nat_eip.id}\"\n  subnet_id     = \"${element(aws_subnet.public_subnet.*.id, 0)}\"\n  depends_on    = [aws_internet_gateway.ig]\n  tags = {\n    Name        = \"nat\"\n    Environment = \"${var.environment}\"\n  }\n}\n/* Public subnet */\nresource \"aws_subnet\" \"public_subnet\" {\n  vpc_id                  = \"${aws_vpc.vpc.id}\"\n  count                   = \"${length(var.public_subnets_cidr)}\"\n  cidr_block              = \"${element(var.public_subnets_cidr,   count.index)}\"\n  availability_zone       = \"${element(var.availability_zones,   count.index)}\"\n  map_public_ip_on_launch = true\n  tags = {\n    Name        = \"${var.environment}-${element(var.availability_zones, count.index)}-      public-subnet\"\n    Environment = \"${var.environment}\"\n  }\n}\n/* Private subnet */\nresource \"aws_subnet\" \"private_subnet\" {\n  vpc_id                  = \"${aws_vpc.vpc.id}\"\n  count                   = \"${length(var.private_subnets_cidr)}\"\n  cidr_block              = \"${element(var.private_subnets_cidr, count.index)}\"\n  availability_zone       = \"${element(var.availability_zones,   count.index)}\"\n  map_public_ip_on_launch = false\n  tags = {\n    Name        = \"${var.environment}-${element(var.availability_zones, count.index)}-private-subnet\"\n    Environment = \"${var.environment}\"\n  }\n}\n/* Routing table for private subnet */\nresource \"aws_route_table\" \"private\" {\n  vpc_id = \"${aws_vpc.vpc.id}\"\n  tags = {\n    Name        = \"${var.environment}-private-route-table\"\n    Environment = \"${var.environment}\"\n  }\n}\n/* Routing table for public subnet */\nresource \"aws_route_table\" \"public\" {\n  vpc_id = \"${aws_vpc.vpc.id}\"\n  tags = {\n    Name        = \"${var.environment}-public-route-table\"\n    Environment = \"${var.environment}\"\n  }\n}\nresource \"aws_route\" \"public_internet_gateway\" {\n  route_table_id         = \"${aws_route_table.public.id}\"\n  destination_cidr_block = \"0.0.0.0/0\"\n  gateway_id             = \"${aws_internet_gateway.ig.id}\"\n}\nresource \"aws_route\" \"private_nat_gateway\" {\n  route_table_id         = \"${aws_route_table.private.id}\"\n  destination_cidr_block = \"0.0.0.0/0\"\n  nat_gateway_id         = \"${aws_nat_gateway.nat.id}\"\n}\n/* Route table associations */\nresource \"aws_route_table_association\" \"public\" {\n  count          = \"${length(var.public_subnets_cidr)}\"\n  subnet_id      = \"${element(aws_subnet.public_subnet.*.id, count.index)}\"\n  route_table_id = \"${aws_route_table.public.id}\"\n}\nresource \"aws_route_table_association\" \"private\" {\n  count          = \"${length(var.private_subnets_cidr)}\"\n  subnet_id      = \"${element(aws_subnet.private_subnet.*.id, count.index)}\"\n  route_table_id = \"${aws_route_table.private.id}\"\n}\n/*==== VPC's Default Security Group ======*/\nresource \"aws_security_group\" \"default\" {\n  name        = \"${var.environment}-default-sg\"\n  description = \"Default security group to allow inbound/outbound from the VPC\"\n  vpc_id      = \"${aws_vpc.vpc.id}\"\n  depends_on  = [aws_vpc.vpc]\n  ingress {\n    from_port = \"0\"\n    to_port   = \"0\"\n    protocol  = \"-1\"\n    self      = true\n  }\n  \n  egress {\n    from_port = \"0\"\n    to_port   = \"0\"\n    protocol  = \"-1\"\n    self      = \"true\"\n  }\n  tags = {\n    Environment = \"${var.environment}\"\n  }\n}"
}